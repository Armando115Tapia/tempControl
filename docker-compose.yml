version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - grafana
    networks:
      - weather-network
    restart: unless-stopped

  api:
    image: temp-control:latest
    expose:
      - "8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=weatherdb
    depends_on:
      db:
        condition: service_healthy
    networks:
      - weather-network
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=weatherdb
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://localhost/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_INSTALL_PLUGINS=grafana-postgresql-datasource
      - GF_LOG_LEVEL=debug
      - GF_LOG_MODE=console
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - weather-network
    depends_on:
      - db
    restart: unless-stopped
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /var/lib/grafana/plugins
        grafana-cli --pluginsDir "/var/lib/grafana/plugins" plugins install grafana-postgresql-datasource
        exec grafana-server                      \
          --homepath=/usr/share/grafana         \
          --config=/etc/grafana/grafana.ini     \
          --packaging=docker                     \
          "$@"

networks:
  weather-network:
    driver: bridge

volumes:
  postgres_data:
  grafana_data: 